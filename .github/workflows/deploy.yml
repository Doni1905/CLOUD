name: Auto Deploy to EC2

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - '**.md'
      - '.gitignore'
      - '.github/**'

env:
  DEPLOY_DIR: /usr/share/nginx/html
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ${{ secrets.EC2_USER }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      # ========== SETUP ========== #
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Debug event info
        run: |
          echo "=== Trigger Information ==="
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "=========================="

      # ========== SSH SETUP ========== #
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          echo "SSH configuration complete"

      # ========== PRE-DEPLOYMENT CHECKS ========== #
      - name: Validate secrets
        run: |
          if [ -z "${{ secrets.EC2_HOST }}" ]; then
            echo "::error::EC2_HOST secret is missing"
            exit 1
          fi
          if [ -z "${{ secrets.EC2_USER }}" ]; then
            echo "::error::EC2_USER secret is missing"
            exit 1
          fi
          if [ -z "${{ secrets.EC2_SSH_KEY }}" ]; then
            echo "::error::EC2_SSH_KEY secret is missing"
            exit 1
          fi
          echo "All secrets are present"

      # ========== SERVER PREPARATION ========== #
      - name: Prepare server directory
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          echo "=== Starting server preparation ==="
          sudo mkdir -p $DEPLOY_DIR
          sudo chown -R $USER:$USER $DEPLOY_DIR
          sudo chmod -R 755 $DEPLOY_DIR
          if [ "$(ls -A $DEPLOY_DIR)" ]; then
            echo "Cleaning existing files..."
            sudo rm -rf $DEPLOY_DIR/{*,.*} || true
          fi
          echo "=== Server ready for deployment ==="
          EOF

      # ========== DEPLOYMENT ========== #
      - name: Sync files (rsync)
        run: |
          echo "Starting file sync..."
          rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no" \
            --exclude '.git' \
            --exclude '.github' \
            --exclude '.vscode' \
            --exclude '*.md' \
            --exclude '*.env*' \
            ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:$DEPLOY_DIR/
          echo "File sync completed"

      # ========== POST-DEPLOYMENT ========== #
      - name: Finalize deployment
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          echo "=== Finalizing deployment ==="
          sudo chown -R www-data:www-data $DEPLOY_DIR
          sudo find $DEPLOY_DIR -type d -exec chmod 755 {} \;
          sudo find $DEPLOY_DIR -type f -exec chmod 644 {} \;
          
          # Create default index if missing
          if [ ! -f "$DEPLOY_DIR/index.html" ]; then
            echo "<h1>Deployment Successful</h1><p>$(date)</p>" | sudo tee $DEPLOY_DIR/index.html
          fi
          
          # Restart nginx
          sudo nginx -t && sudo systemctl restart nginx
          echo "=== Deployment complete ==="
          EOF

      # ========== VERIFICATION ========== #
      - name: Verify deployment
        run: |
          echo "Waiting for Nginx to restart..."
          sleep 5
          echo "Testing endpoint..."
          curl -sSf http://${{ secrets.EC2_HOST }} || exit 1
          echo "Deployment verified successfully"

      - name: Completion notice
        run: |
          echo "ðŸš€ Deployment workflow completed successfully!"
          echo "View your site at: http://${{ secrets.EC2_HOST }}"
