name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up .scpignore to exclude unnecessary files
      - name: Create .scpignore
        run: |
          echo ".git" >> .scpignore
          echo ".github" >> .scpignore
          echo ".vscode" >> .scpignore
          echo "*.md" >> .scpignore
          echo "*.env" >> .scpignore

      # Step 3: Validate required secrets
      - name: Validate Environment Variables
        run: |
          if [ -z "${{ secrets.EC2_HOST }}" ]; then
            echo "::error::EC2_HOST secret is missing"
            exit 1
          fi
          if [ -z "${{ secrets.EC2_USER }}" ]; then
            echo "::error::EC2_USER secret is missing"
            exit 1
          fi
          if [ -z "${{ secrets.EC2_SSH_KEY }}" ]; then
            echo "::error::EC2_SSH_KEY secret is missing"
            exit 1
          fi

      # Step 4: Clean remote directory
      - name: Clean Remote Directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Cleaning deployment directory..."
            sudo mkdir -p /usr/share/nginx/html
            sudo chown -R $USER:$USER /usr/share/nginx/html
            sudo chmod -R 755 /usr/share/nginx/html
            if [ "$(ls -A /usr/share/nginx/html)" ]; then
              sudo rm -rf /usr/share/nginx/html/{*,.*} || true
            fi

      # Step 5: Deploy files via SCP
      - name: Deploy Files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "."
          target: "/usr/share/nginx/html"
          recursive: true
          overwrite: true
          strip_components: 0

      # Step 6: Configure Nginx and permissions
      - name: Configure Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Set proper permissions
            sudo chown -R www-data:www-data /usr/share/nginx/html
            sudo chmod -R 755 /usr/share/nginx/html
            
            # Ensure there's an index file
            if [ ! -f "/usr/share/nginx/html/index.html" ]; then
              echo "<h1>Deployment Successful</h1><p>$(date)</p>" | sudo tee /usr/share/nginx/html/index.html
            fi
            
            # Test and reload Nginx
            sudo nginx -t
            sudo systemctl restart nginx
            sudo systemctl status nginx

      # Step 7: Verify deployment
      - name: Verify Deployment
        run: |
          echo "Waiting 5 seconds for Nginx to restart..."
          sleep 5
          echo "Testing endpoint..."
          curl -sSf http://${{ secrets.EC2_HOST }} || (echo "::error::Website not responding"; exit 1)
